#if !canImport(ObjectiveC)
import XCTest

extension AnyCodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AnyCodableTests = [
        ("AnyCodable__when_it_is_an_array_of_optional_primitives__should_be_correctly_decoded_from_JSON", AnyCodable__when_it_is_an_array_of_optional_primitives__should_be_correctly_decoded_from_JSON),
        ("AnyCodable__when_it_is_an_array_of_optional_primitives__should_be_correctly_encoded_to_JSON", AnyCodable__when_it_is_an_array_of_optional_primitives__should_be_correctly_encoded_to_JSON),
        ("AnyCodable__when_it_is_an_array_of_optional_primitives__should_be_equal_to_another_object_with_the_same_value", AnyCodable__when_it_is_an_array_of_optional_primitives__should_be_equal_to_another_object_with_the_same_value),
        ("AnyCodable__when_it_is_an_array_of_optional_primitives__should_not_be_equal_to_another_object_with_a_different_value_type", AnyCodable__when_it_is_an_array_of_optional_primitives__should_not_be_equal_to_another_object_with_a_different_value_type),
        ("AnyCodable__when_it_is_a_dictionary_of_primitives__should_be_correctly_decoded_from_JSON", AnyCodable__when_it_is_a_dictionary_of_primitives__should_be_correctly_decoded_from_JSON),
        ("AnyCodable__when_it_is_a_dictionary_of_primitives__should_be_correctly_encoded_to_JSON", AnyCodable__when_it_is_a_dictionary_of_primitives__should_be_correctly_encoded_to_JSON),
        ("AnyCodable__when_it_is_a_dictionary_of_primitives__should_be_equal_to_another_object_with_the_same_value", AnyCodable__when_it_is_a_dictionary_of_primitives__should_be_equal_to_another_object_with_the_same_value),
        ("AnyCodable__when_it_is_a_dictionary_of_primitives__should_not_be_equal_to_another_object_with_a_different_value_type", AnyCodable__when_it_is_a_dictionary_of_primitives__should_not_be_equal_to_another_object_with_a_different_value_type),
        ("AnyCodable__when_it_contains_a_nested_dictionary__should_be_correctly_decoded_from_JSON", AnyCodable__when_it_contains_a_nested_dictionary__should_be_correctly_decoded_from_JSON),
        ("AnyCodable__when_it_contains_a_nested_dictionary__should_be_correctly_encoded_to_JSON", AnyCodable__when_it_contains_a_nested_dictionary__should_be_correctly_encoded_to_JSON),
        ("AnyCodable__when_it_contains_a_nested_dictionary__should_be_equal_to_another_object_with_the_same_value", AnyCodable__when_it_contains_a_nested_dictionary__should_be_equal_to_another_object_with_the_same_value),
        ("AnyCodable__when_it_contains_a_nested_dictionary__should_not_be_equal_to_another_object_with_a_different_value_type", AnyCodable__when_it_contains_a_nested_dictionary__should_not_be_equal_to_another_object_with_a_different_value_type),
        ("AnyCodable__when_it_contains_a_non_codable_value__should_throw_an_error_when_decoding_from_JSON", AnyCodable__when_it_contains_a_non_codable_value__should_throw_an_error_when_decoding_from_JSON),
        ("AnyCodable__when_it_contains_a_non_codable_value__should_throw_an_error_when_encoding_to_JSON", AnyCodable__when_it_contains_a_non_codable_value__should_throw_an_error_when_encoding_to_JSON),
        ("AnyCodable__when_it_contains_a_non_codable_value__should_not_be_equal_to_another_object_with_the_same_value", AnyCodable__when_it_contains_a_non_codable_value__should_not_be_equal_to_another_object_with_the_same_value),
        ("AnyCodable__when_it_contains_a_non_codable_value__should_not_be_equal_to_another_object_with_a_different_value_type", AnyCodable__when_it_contains_a_non_codable_value__should_not_be_equal_to_another_object_with_a_different_value_type),
    ]
}

extension AnyCodingKeyTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AnyCodingKeyTests = [
        ("_init______should_create_a_new_non_optional_instance_with_the_given_string_key", _init______should_create_a_new_non_optional_instance_with_the_given_string_key),
        ("_init______should_create_a_new_non_optional_instance_with_the_given_integer_key", _init______should_create_a_new_non_optional_instance_with_the_given_integer_key),
        ("_init__stringValue____should_create_a_new_optional_instance_with_the_given_string_key", _init__stringValue____should_create_a_new_optional_instance_with_the_given_string_key),
        ("_init__intValue____should_create_a_new_optional_instance_with_the_given_integer_key", _init__intValue____should_create_a_new_optional_instance_with_the_given_integer_key),
    ]
}

extension CollectionExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CollectionExtensionsTests = [
        ("Collection___subscript_safe____should_return_a_value_if_the_collection_contains_its_index", Collection___subscript_safe____should_return_a_value_if_the_collection_contains_its_index),
        ("Collection___subscript_safe____should_return_nil_if_the_collection_does_not_contain_its_index", Collection___subscript_safe____should_return_nil_if_the_collection_does_not_contain_its_index),
        ("Collection___contains_index____should_return_true_if_the_collection_contains_the_index", Collection___contains_index____should_return_true_if_the_collection_contains_the_index),
        ("Collection___contains_index____should_return_false_if_the_collection_does_not_contain_the_index", Collection___contains_index____should_return_false_if_the_collection_does_not_contain_the_index),
    ]
}

extension DictionaryExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DictionaryExtensionsTests = [
        ("Dictionary_where_Value_is_a_Collection___append_contentsOf_toValueOfKey____should_append_the_elements_of_a_sequence_to_the_value_if_the_given_key_is_present", Dictionary_where_Value_is_a_Collection___append_contentsOf_toValueOfKey____should_append_the_elements_of_a_sequence_to_the_value_if_the_given_key_is_present),
        ("Dictionary_where_Value_is_a_Collection___append_contentsOf_toValueOfKey____should_add_key_value_pair_with_elements_of_a_sequence_if_the_given_key_is_not_present", Dictionary_where_Value_is_a_Collection___append_contentsOf_toValueOfKey____should_add_key_value_pair_with_elements_of_a_sequence_if_the_given_key_is_not_present),
        ("Dictionary_where_Value_is_a_Collection___append__toValueOfKey____should_append_a_new_element_to_the_value_if_the_given_key_is_present", Dictionary_where_Value_is_a_Collection___append__toValueOfKey____should_append_a_new_element_to_the_value_if_the_given_key_is_present),
        ("Dictionary_where_Value_is_a_Collection___append__toValueOfKey____should_add_key_value_pair_with_a_new_element_if_the_given_key_is_not_present", Dictionary_where_Value_is_a_Collection___append__toValueOfKey____should_add_key_value_pair_with_a_new_element_if_the_given_key_is_not_present),
        ("Dictionary_where_Value_is_a_Collection___prepend_contentsOf_toValueOfKey____should_prepend_the_elements_of_a_sequence_to_the_value_if_the_given_key_is_present", Dictionary_where_Value_is_a_Collection___prepend_contentsOf_toValueOfKey____should_prepend_the_elements_of_a_sequence_to_the_value_if_the_given_key_is_present),
        ("Dictionary_where_Value_is_a_Collection___prepend_contentsOf_toValueOfKey____should_add_key_value_pair_with_elements_of_a_sequence_if_the_given_key_is_not_present", Dictionary_where_Value_is_a_Collection___prepend_contentsOf_toValueOfKey____should_add_key_value_pair_with_elements_of_a_sequence_if_the_given_key_is_not_present),
        ("Dictionary_where_Value_is_a_Collection___prepend__toValueOfKey____should_prepend_a_new_element_to_the_value_if_the_given_key_is_present", Dictionary_where_Value_is_a_Collection___prepend__toValueOfKey____should_prepend_a_new_element_to_the_value_if_the_given_key_is_present),
        ("Dictionary_where_Value_is_a_Collection___prepend__toValueOfKey____should_add_key_value_pair_with_a_new_element_if_the_given_key_is_not_present", Dictionary_where_Value_is_a_Collection___prepend__toValueOfKey____should_add_key_value_pair_with_a_new_element_if_the_given_key_is_not_present),
        ("Dictionary_where_Value_is_a_Collection___appending_contentsOf_toValueOfKey____should_return_a_copy_of_the_dictionary_with_the_appended_sequence_elements", Dictionary_where_Value_is_a_Collection___appending_contentsOf_toValueOfKey____should_return_a_copy_of_the_dictionary_with_the_appended_sequence_elements),
        ("Dictionary_where_Value_is_a_Collection___appending__toValueOfKey____should_return_a_copy_of_the_dictionary_with_the_appended_element", Dictionary_where_Value_is_a_Collection___appending__toValueOfKey____should_return_a_copy_of_the_dictionary_with_the_appended_element),
        ("Dictionary_where_Value_is_a_Collection___prepending_contentsOf_toValueOfKey____should_return_a_copy_of_the_dictionary_with_the_appended_sequence_elements", Dictionary_where_Value_is_a_Collection___prepending_contentsOf_toValueOfKey____should_return_a_copy_of_the_dictionary_with_the_appended_sequence_elements),
        ("Dictionary_where_Value_is_a_Collection___prepending__toValueOfKey____should_return_a_copy_of_the_dictionary_with_the_appended_element", Dictionary_where_Value_is_a_Collection___prepending__toValueOfKey____should_return_a_copy_of_the_dictionary_with_the_appended_element),
    ]
}

extension JSONDecoderCodingPathExtensionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__JSONDecoderCodingPathExtensionTests = [
        ("JSON_Decoder__decode__from_codingPath___should_correctly_decode_the_data_at_the_given_path_encoding", JSON_Decoder__decode__from_codingPath___should_correctly_decode_the_data_at_the_given_path_encoding),
        ("JSON_Decoder__decode__from_codingPath___should_correctly_decode_the_data_at_the_given_empty_path_encoding", JSON_Decoder__decode__from_codingPath___should_correctly_decode_the_data_at_the_given_empty_path_encoding),
        ("JSON_Decoder__decode__from_codingPath___should_ignore_the_value_of_the__codingPath__key_from_the__userInfo__property", JSON_Decoder__decode__from_codingPath___should_ignore_the_value_of_the__codingPath__key_from_the__userInfo__property),
        ("JSON_Decoder__decode__from_codingPath___should_not_change_the__userInfo__property", JSON_Decoder__decode__from_codingPath___should_not_change_the__userInfo__property),
    ]
}

extension RangeReplaceableCollectionExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RangeReplaceableCollectionExtensionsTests = [
        ("RangeReplaceableCollection___prepend_contentsOf____should_prepend_the_elements_of_a_sequence_to_the_collection", RangeReplaceableCollection___prepend_contentsOf____should_prepend_the_elements_of_a_sequence_to_the_collection),
        ("RangeReplaceableCollection___prepend______should_prepend_a_new_element_to_the_collection", RangeReplaceableCollection___prepend______should_prepend_a_new_element_to_the_collection),
        ("RangeReplaceableCollection___prepending_contentsOf____should_return_a_copy_of_the_collection_with_the_prepended_sequence_elements", RangeReplaceableCollection___prepending_contentsOf____should_return_a_copy_of_the_collection_with_the_prepended_sequence_elements),
        ("RangeReplaceableCollection___prepending______should_return_a_copy_of_the_collection_with_the_prepended_element", RangeReplaceableCollection___prepending______should_return_a_copy_of_the_collection_with_the_prepended_element),
        ("RangeReplaceableCollection___appending_contentsOf____should_return_a_copy_of_the_collection_with_the_appended_sequence_elements", RangeReplaceableCollection___appending_contentsOf____should_return_a_copy_of_the_collection_with_the_appended_sequence_elements),
        ("RangeReplaceableCollection___appending______should_return_a_copy_of_the_collection_with_the_appended_element", RangeReplaceableCollection___appending______should_return_a_copy_of_the_collection_with_the_appended_element),
    ]
}

extension SpecAnySchemaTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecAnySchemaTests = [
        ("Any_schema__should_be_correctly_decoded_from_YAML_string", Any_schema__should_be_correctly_decoded_from_YAML_string),
        ("Any_schema__should_be_correctly_encoded_to_YAML_string", Any_schema__should_be_correctly_encoded_to_YAML_string),
        ("Not_integer_any_schema__should_be_correctly_decoded_from_YAML_string", Not_integer_any_schema__should_be_correctly_decoded_from_YAML_string),
        ("Not_integer_any_schema__should_be_correctly_encoded_to_YAML_string", Not_integer_any_schema__should_be_correctly_encoded_to_YAML_string),
    ]
}

extension SpecArraySchemaTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecArraySchemaTests = [
        ("Any_array_schema__should_be_correctly_decoded_from_YAML_string", Any_array_schema__should_be_correctly_decoded_from_YAML_string),
        ("Any_array_schema__should_be_correctly_encoded_to_YAML_string", Any_array_schema__should_be_correctly_encoded_to_YAML_string),
        ("Language_array_schema__should_be_correctly_decoded_from_YAML_string", Language_array_schema__should_be_correctly_decoded_from_YAML_string),
        ("Language_array_schema__should_be_correctly_encoded_to_YAML_string", Language_array_schema__should_be_correctly_encoded_to_YAML_string),
    ]
}

extension SpecBooleanSchemaTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecBooleanSchemaTests = [
        ("Any_Boolean_schema__should_be_correctly_decoded_from_YAML_string", Any_Boolean_schema__should_be_correctly_decoded_from_YAML_string),
        ("Any_Boolean_schema__should_be_correctly_encoded_to_YAML_string", Any_Boolean_schema__should_be_correctly_encoded_to_YAML_string),
        ("Availability_Boolean_schema__should_be_correctly_decoded_from_YAML_string", Availability_Boolean_schema__should_be_correctly_decoded_from_YAML_string),
        ("Availability_Boolean_schema__should_be_correctly_encoded_to_YAML_string", Availability_Boolean_schema__should_be_correctly_encoded_to_YAML_string),
    ]
}

extension SpecCallbacksTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecCallbacksTests = [
        ("Subcription_callbacks__should_be_correctly_decoded_from_YAML_string", Subcription_callbacks__should_be_correctly_decoded_from_YAML_string),
        ("Subcription_callbacks__should_be_correctly_encoded_to_YAML_string", Subcription_callbacks__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecComponentsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecComponentsTests = [
        ("Empty_components__should_be_correctly_decoded_from_YAML_string", Empty_components__should_be_correctly_decoded_from_YAML_string),
        ("Empty_components__should_be_correctly_encoded_to_YAML_string", Empty_components__should_be_correctly_encoded_to_YAML_string),
        ("AppStore_components__should_be_correctly_decoded_from_YAML_string", AppStore_components__should_be_correctly_decoded_from_YAML_string),
        ("AppStore_components__should_be_correctly_encoded_to_YAML_string", AppStore_components__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecContactInfoTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecContactInfoTests = [
        ("Contact_Info__should_be_correctly_decoded_from_YAML_string", Contact_Info__should_be_correctly_decoded_from_YAML_string),
        ("Contact_Info__should_be_correctly_encoded_to_YAML_string", Contact_Info__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecEmbeddedExampleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecEmbeddedExampleTests = [
        ("Video_duration_embedded_example__should_be_correctly_decoded_from_YAML_string", Video_duration_embedded_example__should_be_correctly_decoded_from_YAML_string),
        ("Video_duration_embedded_example__should_be_correctly_encoded_to_YAML_string", Video_duration_embedded_example__should_be_correctly_encoded_to_YAML_string),
        ("UID_embedded_example__should_be_correctly_decoded_from_YAML_string", UID_embedded_example__should_be_correctly_decoded_from_YAML_string),
        ("UID_embedded_example__should_be_correctly_encoded_to_YAML_string", UID_embedded_example__should_be_correctly_encoded_to_YAML_string),
        ("Rating_embedded_example__should_be_correctly_decoded_from_YAML_string", Rating_embedded_example__should_be_correctly_decoded_from_YAML_string),
        ("Rating_embedded_example__should_be_correctly_encoded_to_YAML_string", Rating_embedded_example__should_be_correctly_encoded_to_YAML_string),
        ("Email_embedded_example__should_be_correctly_decoded_from_YAML_string", Email_embedded_example__should_be_correctly_decoded_from_YAML_string),
        ("Email_embedded_example__should_be_correctly_encoded_to_YAML_string", Email_embedded_example__should_be_correctly_encoded_to_YAML_string),
        ("Languages_embedded_example__should_be_correctly_decoded_from_YAML_string", Languages_embedded_example__should_be_correctly_decoded_from_YAML_string),
        ("Languages_embedded_example__should_be_correctly_encoded_to_YAML_string", Languages_embedded_example__should_be_correctly_encoded_to_YAML_string),
        ("Image_size_embedded_example__should_be_correctly_decoded_from_YAML_string", Image_size_embedded_example__should_be_correctly_decoded_from_YAML_string),
        ("Image_size_embedded_example__should_be_correctly_encoded_to_YAML_string", Image_size_embedded_example__should_be_correctly_encoded_to_YAML_string),
    ]
}

extension SpecExampleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecExampleTests = [
        ("UID_example__should_be_correctly_decoded_from_YAML_string", UID_example__should_be_correctly_decoded_from_YAML_string),
        ("UID_example__should_be_correctly_encoded_to_YAML_string", UID_example__should_be_correctly_encoded_to_YAML_string),
        ("Rating_example__should_be_correctly_decoded_from_YAML_string", Rating_example__should_be_correctly_decoded_from_YAML_string),
        ("Rating_example__should_be_correctly_encoded_to_YAML_string", Rating_example__should_be_correctly_encoded_to_YAML_string),
        ("Email_example__should_be_correctly_decoded_from_YAML_string", Email_example__should_be_correctly_decoded_from_YAML_string),
        ("Email_example__should_be_correctly_encoded_to_YAML_string", Email_example__should_be_correctly_encoded_to_YAML_string),
        ("Languages_example__should_be_correctly_decoded_from_YAML_string", Languages_example__should_be_correctly_decoded_from_YAML_string),
        ("Languages_example__should_be_correctly_encoded_to_YAML_string", Languages_example__should_be_correctly_encoded_to_YAML_string),
        ("Image_size_example__should_be_correctly_decoded_from_YAML_string", Image_size_example__should_be_correctly_decoded_from_YAML_string),
        ("Image_size_example__should_be_correctly_encoded_to_YAML_string", Image_size_example__should_be_correctly_encoded_to_YAML_string),
        ("Image_example__should_be_correctly_decoded_from_YAML_string", Image_example__should_be_correctly_decoded_from_YAML_string),
        ("Image_example__should_be_correctly_encoded_to_YAML_string", Image_example__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecExternalDocumentationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecExternalDocumentationTests = [
        ("External_documentation_with_more_info__should_be_correctly_decoded_from_YAML_string", External_documentation_with_more_info__should_be_correctly_decoded_from_YAML_string),
        ("External_documentation_with_more_info__should_be_correctly_encoded_to_YAML_string", External_documentation_with_more_info__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecHeaderMetadataTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecHeaderMetadataTests = [
        ("Any_header_metadata__should_be_correctly_decoded_from_YAML_string", Any_header_metadata__should_be_correctly_decoded_from_YAML_string),
        ("Any_header_metadata__should_be_correctly_encoded_to_YAML_string", Any_header_metadata__should_be_correctly_encoded_to_YAML_string),
        ("X_Rate_Limit_Limit_header_metadata__should_be_correctly_decoded_from_YAML_string", X_Rate_Limit_Limit_header_metadata__should_be_correctly_decoded_from_YAML_string),
        ("X_Rate_Limit_Limit_header_metadata__should_be_correctly_encoded_to_YAML_string", X_Rate_Limit_Limit_header_metadata__should_be_correctly_encoded_to_YAML_string),
        ("UID_header_metadata__should_be_correctly_decoded_from_YAML_string", UID_header_metadata__should_be_correctly_decoded_from_YAML_string),
        ("UID_header_metadata__should_be_correctly_encoded_to_YAML_string", UID_header_metadata__should_be_correctly_encoded_to_YAML_string),
        ("Email_header_metadata__should_be_correctly_decoded_from_YAML_string", Email_header_metadata__should_be_correctly_decoded_from_YAML_string),
        ("Email_header_metadata__should_be_correctly_encoded_to_YAML_string", Email_header_metadata__should_be_correctly_encoded_to_YAML_string),
        ("Location_header_metadata__should_be_correctly_decoded_from_YAML_string", Location_header_metadata__should_be_correctly_decoded_from_YAML_string),
        ("Location_header_metadata__should_be_correctly_encoded_to_YAML_string", Location_header_metadata__should_be_correctly_encoded_to_YAML_string),
    ]
}

extension SpecHeaderSchemaTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecHeaderSchemaTests = [
        ("X_Rate_Limit_Limit_header_schema__should_be_correctly_decoded_from_YAML_string", X_Rate_Limit_Limit_header_schema__should_be_correctly_decoded_from_YAML_string),
        ("X_Rate_Limit_Limit_header_schema__should_be_correctly_encoded_to_YAML_string", X_Rate_Limit_Limit_header_schema__should_be_correctly_encoded_to_YAML_string),
        ("UID_header_schema__should_be_correctly_decoded_from_YAML_string", UID_header_schema__should_be_correctly_decoded_from_YAML_string),
        ("UID_header_schema__should_be_correctly_encoded_to_YAML_string", UID_header_schema__should_be_correctly_encoded_to_YAML_string),
        ("Email_header_schema__should_be_correctly_decoded_from_YAML_string", Email_header_schema__should_be_correctly_decoded_from_YAML_string),
        ("Email_header_schema__should_be_correctly_encoded_to_YAML_string", Email_header_schema__should_be_correctly_encoded_to_YAML_string),
        ("Location_header_schema__should_be_correctly_decoded_from_YAML_string", Location_header_schema__should_be_correctly_decoded_from_YAML_string),
        ("Location_header_schema__should_be_correctly_encoded_to_YAML_string", Location_header_schema__should_be_correctly_encoded_to_YAML_string),
    ]
}

extension SpecHeaderTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecHeaderTests = [
        ("X_Rate_Limit_Limit_header__should_be_correctly_decoded_from_YAML_string", X_Rate_Limit_Limit_header__should_be_correctly_decoded_from_YAML_string),
        ("X_Rate_Limit_Limit_header__should_be_correctly_encoded_to_YAML_string", X_Rate_Limit_Limit_header__should_be_correctly_encoded_to_YAML_string),
        ("UID_header__should_be_correctly_decoded_from_YAML_string", UID_header__should_be_correctly_decoded_from_YAML_string),
        ("UID_header__should_be_correctly_encoded_to_YAML_string", UID_header__should_be_correctly_encoded_to_YAML_string),
        ("Email_header__should_be_correctly_decoded_from_YAML_string", Email_header__should_be_correctly_decoded_from_YAML_string),
        ("Email_header__should_be_correctly_encoded_to_YAML_string", Email_header__should_be_correctly_encoded_to_YAML_string),
        ("Location_header__should_be_correctly_decoded_from_YAML_string", Location_header__should_be_correctly_decoded_from_YAML_string),
        ("Location_header__should_be_correctly_encoded_to_YAML_string", Location_header__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecInfoTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecInfoTests = [
        ("Info__should_be_correctly_decoded_from_YAML_string", Info__should_be_correctly_decoded_from_YAML_string),
        ("Info__should_be_correctly_encoded_to_YAML_string", Info__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecIntegerSchemaTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecIntegerSchemaTests = [
        ("Any_integer_schema__should_be_correctly_decoded_from_YAML_string", Any_integer_schema__should_be_correctly_decoded_from_YAML_string),
        ("Any_integer_schema__should_be_correctly_encoded_to_YAML_string", Any_integer_schema__should_be_correctly_encoded_to_YAML_string),
        ("Video_duration_integer_schema__should_be_correctly_decoded_from_YAML_string", Video_duration_integer_schema__should_be_correctly_decoded_from_YAML_string),
        ("Video_duration_integer_schema__should_be_correctly_encoded_to_YAML_string", Video_duration_integer_schema__should_be_correctly_encoded_to_YAML_string),
        ("Content_rating_integer_schema__should_be_correctly_decoded_from_YAML_string", Content_rating_integer_schema__should_be_correctly_decoded_from_YAML_string),
        ("Content_rating_integer_schema__should_be_correctly_encoded_to_YAML_string", Content_rating_integer_schema__should_be_correctly_encoded_to_YAML_string),
        ("UID_integer_schema__should_be_correctly_decoded_from_YAML_string", UID_integer_schema__should_be_correctly_decoded_from_YAML_string),
        ("UID_integer_schema__should_be_correctly_encoded_to_YAML_string", UID_integer_schema__should_be_correctly_encoded_to_YAML_string),
        ("_format__when_integer_format_is_known__should_return_the_format", _format__when_integer_format_is_known__should_return_the_format),
        ("_format__when_integer_format_is_known__should_set__rawFormat__to__rawValue__of_the_new_format", _format__when_integer_format_is_known__should_set__rawFormat__to__rawValue__of_the_new_format),
        ("_format__when_integer_format_is_not_specified__should_return_nil", _format__when_integer_format_is_not_specified__should_return_nil),
        ("_format__when_integer_format_is_not_specified__should_set__rawFormat__to__rawValue__of_the_new_format", _format__when_integer_format_is_not_specified__should_set__rawFormat__to__rawValue__of_the_new_format),
    ]
}

extension SpecLicenseInfoTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecLicenseInfoTests = [
        ("License_Info__should_be_correctly_decoded_from_YAML_string", License_Info__should_be_correctly_decoded_from_YAML_string),
        ("License_Info__should_be_correctly_encoded_to_YAML_string", License_Info__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecMediaTypeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecMediaTypeTests = [
        ("UID_media_type__should_be_correctly_decoded_from_YAML_string", UID_media_type__should_be_correctly_decoded_from_YAML_string),
        ("UID_media_type__should_be_correctly_encoded_to_YAML_string", UID_media_type__should_be_correctly_encoded_to_YAML_string),
        ("Email_media_type__should_be_correctly_decoded_from_YAML_string", Email_media_type__should_be_correctly_decoded_from_YAML_string),
        ("Email_media_type__should_be_correctly_encoded_to_YAML_string", Email_media_type__should_be_correctly_encoded_to_YAML_string),
        ("Languages_media_type__should_be_correctly_decoded_from_YAML_string", Languages_media_type__should_be_correctly_decoded_from_YAML_string),
        ("Languages_media_type__should_be_correctly_encoded_to_YAML_string", Languages_media_type__should_be_correctly_encoded_to_YAML_string),
        ("Location_media_type__should_be_correctly_decoded_from_YAML_string", Location_media_type__should_be_correctly_decoded_from_YAML_string),
        ("Location_media_type__should_be_correctly_encoded_to_YAML_string", Location_media_type__should_be_correctly_encoded_to_YAML_string),
        ("App_info_media_type__should_be_correctly_decoded_from_YAML_string", App_info_media_type__should_be_correctly_decoded_from_YAML_string),
        ("App_info_media_type__should_be_correctly_encoded_to_YAML_string", App_info_media_type__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecNumberSchemaTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecNumberSchemaTests = [
        ("Any_number_schema__should_be_correctly_decoded_from_YAML_string", Any_number_schema__should_be_correctly_decoded_from_YAML_string),
        ("Any_number_schema__should_be_correctly_encoded_to_YAML_string", Any_number_schema__should_be_correctly_encoded_to_YAML_string),
        ("Rating_number_schema__should_be_correctly_decoded_from_YAML_string", Rating_number_schema__should_be_correctly_decoded_from_YAML_string),
        ("Rating_number_schema__should_be_correctly_encoded_to_YAML_string", Rating_number_schema__should_be_correctly_encoded_to_YAML_string),
        ("Price_category_number_schema__should_be_correctly_decoded_from_YAML_string", Price_category_number_schema__should_be_correctly_decoded_from_YAML_string),
        ("Price_category_number_schema__should_be_correctly_encoded_to_YAML_string", Price_category_number_schema__should_be_correctly_encoded_to_YAML_string),
        ("_format__when_integer_format_is_known__should_return_the_format", _format__when_integer_format_is_known__should_return_the_format),
        ("_format__when_integer_format_is_known__should_set__rawFormat__to__rawValue__of_the_new_format", _format__when_integer_format_is_known__should_set__rawFormat__to__rawValue__of_the_new_format),
        ("_format__when_integer_format_is_not_specified__should_return_nil", _format__when_integer_format_is_not_specified__should_return_nil),
        ("_format__when_integer_format_is_not_specified__should_set__rawFormat__to__rawValue__of_the_new_format", _format__when_integer_format_is_not_specified__should_set__rawFormat__to__rawValue__of_the_new_format),
    ]
}

extension SpecOAuthAuthorizationCodeFlowTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecOAuthAuthorizationCodeFlowTests = [
        ("Flow_without_any_scopes__should_be_correctly_decoded_from_YAML_string", Flow_without_any_scopes__should_be_correctly_decoded_from_YAML_string),
        ("Flow_without_any_scopes__should_be_correctly_encoded_to_YAML_string", Flow_without_any_scopes__should_be_correctly_encoded_to_YAML_string),
        ("Flow_with_scopes_for_reading_and_writing_app_information__should_be_correctly_decoded_from_YAML_string", Flow_with_scopes_for_reading_and_writing_app_information__should_be_correctly_decoded_from_YAML_string),
        ("Flow_with_scopes_for_reading_and_writing_app_information__should_be_correctly_encoded_to_YAML_string", Flow_with_scopes_for_reading_and_writing_app_information__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecOAuthFlowTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecOAuthFlowTests = [
        ("Flow_without_any_scopes__should_be_correctly_decoded_from_YAML_string", Flow_without_any_scopes__should_be_correctly_decoded_from_YAML_string),
        ("Flow_without_any_scopes__should_be_correctly_encoded_to_YAML_string", Flow_without_any_scopes__should_be_correctly_encoded_to_YAML_string),
        ("Flow_with_scopes_for_reading_and_writing_app_information__should_be_correctly_decoded_from_YAML_string", Flow_with_scopes_for_reading_and_writing_app_information__should_be_correctly_decoded_from_YAML_string),
        ("Flow_with_scopes_for_reading_and_writing_app_information__should_be_correctly_encoded_to_YAML_string", Flow_with_scopes_for_reading_and_writing_app_information__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecOAuthFlowsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecOAuthFlowsTests = [
        ("Implicit_only_flows__should_be_correctly_decoded_from_YAML_string", Implicit_only_flows__should_be_correctly_decoded_from_YAML_string),
        ("Implicit_only_flows__should_be_correctly_encoded_to_YAML_string", Implicit_only_flows__should_be_correctly_encoded_to_YAML_string),
        ("Catchall_flows__should_be_correctly_decoded_from_YAML_string", Catchall_flows__should_be_correctly_decoded_from_YAML_string),
        ("Catchall_flows__should_be_correctly_encoded_to_YAML_string", Catchall_flows__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecOAuthImplicitFlowTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecOAuthImplicitFlowTests = [
        ("Flow_without_any_scopes__should_be_correctly_decoded_from_YAML_string", Flow_without_any_scopes__should_be_correctly_decoded_from_YAML_string),
        ("Flow_without_any_scopes__should_be_correctly_encoded_to_YAML_string", Flow_without_any_scopes__should_be_correctly_encoded_to_YAML_string),
        ("Flow_with_scopes_for_reading_and_writing_app_information__should_be_correctly_decoded_from_YAML_string", Flow_with_scopes_for_reading_and_writing_app_information__should_be_correctly_decoded_from_YAML_string),
        ("Flow_with_scopes_for_reading_and_writing_app_information__should_be_correctly_encoded_to_YAML_string", Flow_with_scopes_for_reading_and_writing_app_information__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecObjectSchemaTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecObjectSchemaTests = [
        ("Implicitly_any_object_schema__should_be_correctly_decoded_from_YAML_string", Implicitly_any_object_schema__should_be_correctly_decoded_from_YAML_string),
        ("Implicitly_any_object_schema__should_be_correctly_encoded_to_YAML_string", Implicitly_any_object_schema__should_be_correctly_encoded_to_YAML_string),
        ("Any_object_schema__should_be_correctly_decoded_from_YAML_string", Any_object_schema__should_be_correctly_decoded_from_YAML_string),
        ("Any_object_schema__should_be_correctly_encoded_to_YAML_string", Any_object_schema__should_be_correctly_encoded_to_YAML_string),
        ("String_to_string_object_schema__should_be_correctly_decoded_from_YAML_string", String_to_string_object_schema__should_be_correctly_decoded_from_YAML_string),
        ("String_to_string_object_schema__should_be_correctly_encoded_to_YAML_string", String_to_string_object_schema__should_be_correctly_encoded_to_YAML_string),
        ("Image_size_object_schema__should_be_correctly_decoded_from_YAML_string", Image_size_object_schema__should_be_correctly_decoded_from_YAML_string),
        ("Image_size_object_schema__should_be_correctly_encoded_to_YAML_string", Image_size_object_schema__should_be_correctly_encoded_to_YAML_string),
        ("Image_object_schema__should_be_correctly_decoded_from_YAML_string", Image_object_schema__should_be_correctly_decoded_from_YAML_string),
        ("Image_object_schema__should_be_correctly_encoded_to_YAML_string", Image_object_schema__should_be_correctly_encoded_to_YAML_string),
        ("Video_object_schema__should_be_correctly_decoded_from_YAML_string", Video_object_schema__should_be_correctly_decoded_from_YAML_string),
        ("Video_object_schema__should_be_correctly_encoded_to_YAML_string", Video_object_schema__should_be_correctly_encoded_to_YAML_string),
        ("Media_object_schema__should_be_correctly_decoded_from_YAML_string", Media_object_schema__should_be_correctly_decoded_from_YAML_string),
        ("Media_object_schema__should_be_correctly_encoded_to_YAML_string", Media_object_schema__should_be_correctly_encoded_to_YAML_string),
    ]
}

extension SpecOperationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecOperationTests = [
        ("GET_app_info_operation__should_be_correctly_decoded_from_YAML_string", GET_app_info_operation__should_be_correctly_decoded_from_YAML_string),
        ("GET_app_info_operation__should_be_correctly_encoded_to_YAML_string", GET_app_info_operation__should_be_correctly_encoded_to_YAML_string),
        ("GET_apps_operation__should_be_correctly_decoded_from_YAML_string", GET_apps_operation__should_be_correctly_decoded_from_YAML_string),
        ("GET_apps_operation__should_be_correctly_encoded_to_YAML_string", GET_apps_operation__should_be_correctly_encoded_to_YAML_string),
        ("POST_app_operation__should_be_correctly_decoded_from_YAML_string", POST_app_operation__should_be_correctly_decoded_from_YAML_string),
        ("POST_app_operation__should_be_correctly_encoded_to_YAML_string", POST_app_operation__should_be_correctly_encoded_to_YAML_string),
        ("POST_subscription_operation__should_be_correctly_decoded_from_YAML_string", POST_subscription_operation__should_be_correctly_decoded_from_YAML_string),
        ("POST_subscription_operation__should_be_correctly_encoded_to_YAML_string", POST_subscription_operation__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecParameterMetadataTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecParameterMetadataTests = [
        ("UID_parameter_metadata__should_be_correctly_decoded_from_YAML_string", UID_parameter_metadata__should_be_correctly_decoded_from_YAML_string),
        ("UID_parameter_metadata__should_be_correctly_encoded_to_YAML_string", UID_parameter_metadata__should_be_correctly_encoded_to_YAML_string),
        ("Email_parameter_metadata__should_be_correctly_decoded_from_YAML_string", Email_parameter_metadata__should_be_correctly_decoded_from_YAML_string),
        ("Email_parameter_metadata__should_be_correctly_encoded_to_YAML_string", Email_parameter_metadata__should_be_correctly_encoded_to_YAML_string),
        ("Location_parameter_metadata__should_be_correctly_decoded_from_YAML_string", Location_parameter_metadata__should_be_correctly_decoded_from_YAML_string),
        ("Location_parameter_metadata__should_be_correctly_encoded_to_YAML_string", Location_parameter_metadata__should_be_correctly_encoded_to_YAML_string),
    ]
}

extension SpecParameterSchemaTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecParameterSchemaTests = [
        ("UID_parameter_schema__should_be_correctly_decoded_from_YAML_string", UID_parameter_schema__should_be_correctly_decoded_from_YAML_string),
        ("UID_parameter_schema__should_be_correctly_encoded_to_YAML_string", UID_parameter_schema__should_be_correctly_encoded_to_YAML_string),
        ("Email_parameter_schema__should_be_correctly_decoded_from_YAML_string", Email_parameter_schema__should_be_correctly_decoded_from_YAML_string),
        ("Email_parameter_schema__should_be_correctly_encoded_to_YAML_string", Email_parameter_schema__should_be_correctly_encoded_to_YAML_string),
        ("Location_parameter_schema__should_be_correctly_decoded_from_YAML_string", Location_parameter_schema__should_be_correctly_decoded_from_YAML_string),
        ("Location_parameter_schema__should_be_correctly_encoded_to_YAML_string", Location_parameter_schema__should_be_correctly_encoded_to_YAML_string),
    ]
}

extension SpecParameterTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecParameterTests = [
        ("UID_parameter__should_be_correctly_decoded_from_YAML_string", UID_parameter__should_be_correctly_decoded_from_YAML_string),
        ("UID_parameter__should_be_correctly_encoded_to_YAML_string", UID_parameter__should_be_correctly_encoded_to_YAML_string),
        ("Email_parameter__should_be_correctly_decoded_from_YAML_string", Email_parameter__should_be_correctly_decoded_from_YAML_string),
        ("Email_parameter__should_be_correctly_encoded_to_YAML_string", Email_parameter__should_be_correctly_encoded_to_YAML_string),
        ("Location_parameter__should_be_correctly_decoded_from_YAML_string", Location_parameter__should_be_correctly_decoded_from_YAML_string),
        ("Location_parameter__should_be_correctly_encoded_to_YAML_string", Location_parameter__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecPathTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecPathTests = [
        ("Empty_path__should_be_correctly_decoded_from_YAML_string", Empty_path__should_be_correctly_decoded_from_YAML_string),
        ("Empty_path__should_be_correctly_encoded_to_YAML_string", Empty_path__should_be_correctly_encoded_to_YAML_string),
        ("Apps_path__should_be_correctly_decoded_from_YAML_string", Apps_path__should_be_correctly_decoded_from_YAML_string),
        ("Apps_path__should_be_correctly_encoded_to_YAML_string", Apps_path__should_be_correctly_encoded_to_YAML_string),
        ("App_info_path__should_be_correctly_decoded_from_YAML_string", App_info_path__should_be_correctly_decoded_from_YAML_string),
        ("App_info_path__should_be_correctly_encoded_to_YAML_string", App_info_path__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecRequestBodyEncodingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecRequestBodyEncodingTests = [
        ("Any_request_body_encoding__should_be_correctly_decoded_from_YAML_string", Any_request_body_encoding__should_be_correctly_decoded_from_YAML_string),
        ("Any_request_body_encoding__should_be_correctly_encoded_to_YAML_string", Any_request_body_encoding__should_be_correctly_encoded_to_YAML_string),
        ("Languages_request_body_encoding__should_be_correctly_decoded_from_YAML_string", Languages_request_body_encoding__should_be_correctly_decoded_from_YAML_string),
        ("Languages_request_body_encoding__should_be_correctly_encoded_to_YAML_string", Languages_request_body_encoding__should_be_correctly_encoded_to_YAML_string),
        ("Image_file_request_body_encoding__should_be_correctly_decoded_from_YAML_string", Image_file_request_body_encoding__should_be_correctly_decoded_from_YAML_string),
        ("Image_file_request_body_encoding__should_be_correctly_encoded_to_YAML_string", Image_file_request_body_encoding__should_be_correctly_encoded_to_YAML_string),
        ("App_info_request_body_encoding__should_be_correctly_decoded_from_YAML_string", App_info_request_body_encoding__should_be_correctly_decoded_from_YAML_string),
        ("App_info_request_body_encoding__should_be_correctly_encoded_to_YAML_string", App_info_request_body_encoding__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecRequestBodyMediaTypeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecRequestBodyMediaTypeTests = [
        ("Any_request_body_media_type__should_be_correctly_decoded_from_YAML_string", Any_request_body_media_type__should_be_correctly_decoded_from_YAML_string),
        ("Any_request_body_media_type__should_be_correctly_encoded_to_YAML_string", Any_request_body_media_type__should_be_correctly_encoded_to_YAML_string),
        ("Languages_request_body_media_type__should_be_correctly_decoded_from_YAML_string", Languages_request_body_media_type__should_be_correctly_decoded_from_YAML_string),
        ("Languages_request_body_media_type__should_be_correctly_encoded_to_YAML_string", Languages_request_body_media_type__should_be_correctly_encoded_to_YAML_string),
        ("Image_file_request_body_media_type__should_be_correctly_decoded_from_YAML_string", Image_file_request_body_media_type__should_be_correctly_decoded_from_YAML_string),
        ("Image_file_request_body_media_type__should_be_correctly_encoded_to_YAML_string", Image_file_request_body_media_type__should_be_correctly_encoded_to_YAML_string),
        ("App_info_request_body_media_type__should_be_correctly_decoded_from_YAML_string", App_info_request_body_media_type__should_be_correctly_decoded_from_YAML_string),
        ("App_info_request_body_media_type__should_be_correctly_encoded_to_YAML_string", App_info_request_body_media_type__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecRequestBodyTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecRequestBodyTests = [
        ("Languages_request_body__should_be_correctly_decoded_from_YAML_string", Languages_request_body__should_be_correctly_decoded_from_YAML_string),
        ("Languages_request_body__should_be_correctly_encoded_to_YAML_string", Languages_request_body__should_be_correctly_encoded_to_YAML_string),
        ("Image_file_request_body__should_be_correctly_decoded_from_YAML_string", Image_file_request_body__should_be_correctly_decoded_from_YAML_string),
        ("Image_file_request_body__should_be_correctly_encoded_to_YAML_string", Image_file_request_body__should_be_correctly_encoded_to_YAML_string),
        ("App_info_request_body__should_be_correctly_decoded_from_YAML_string", App_info_request_body__should_be_correctly_decoded_from_YAML_string),
        ("App_info_request_body__should_be_correctly_encoded_to_YAML_string", App_info_request_body__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecResponseTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecResponseTests = [
        ("Empty_response__should_be_correctly_decoded_from_YAML_string", Empty_response__should_be_correctly_decoded_from_YAML_string),
        ("Empty_response__should_be_correctly_encoded_to_YAML_string", Empty_response__should_be_correctly_encoded_to_YAML_string),
        ("Email_response__should_be_correctly_decoded_from_YAML_string", Email_response__should_be_correctly_decoded_from_YAML_string),
        ("Email_response__should_be_correctly_encoded_to_YAML_string", Email_response__should_be_correctly_encoded_to_YAML_string),
        ("App_info_response__should_be_correctly_decoded_from_YAML_string", App_info_response__should_be_correctly_decoded_from_YAML_string),
        ("App_info_response__should_be_correctly_encoded_to_YAML_string", App_info_response__should_be_correctly_encoded_to_YAML_string),
        ("_rawLinks__should_return_raw_links", _rawLinks__should_return_raw_links),
        ("_rawLinks__should_modify_raw_links", _rawLinks__should_modify_raw_links),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecSchemaDiscriminatorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecSchemaDiscriminatorTests = [
        ("Media_type_schema_discriminator__should_be_correctly_decoded_from_YAML_string", Media_type_schema_discriminator__should_be_correctly_decoded_from_YAML_string),
        ("Media_type_schema_discriminator__should_be_correctly_encoded_to_YAML_string", Media_type_schema_discriminator__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecSchemaMetadataTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecSchemaMetadataTests = [
        ("Any_schema_metadata__should_be_correctly_decoded_from_YAML_string", Any_schema_metadata__should_be_correctly_decoded_from_YAML_string),
        ("Any_schema_metadata__should_be_correctly_encoded_to_YAML_string", Any_schema_metadata__should_be_correctly_encoded_to_YAML_string),
        ("Availability_schema_metadata__should_be_correctly_decoded_from_YAML_string", Availability_schema_metadata__should_be_correctly_decoded_from_YAML_string),
        ("Availability_schema_metadata__should_be_correctly_encoded_to_YAML_string", Availability_schema_metadata__should_be_correctly_encoded_to_YAML_string),
        ("Video_duration_schema_metadata__should_be_correctly_decoded_from_YAML_string", Video_duration_schema_metadata__should_be_correctly_decoded_from_YAML_string),
        ("Video_duration_schema_metadata__should_be_correctly_encoded_to_YAML_string", Video_duration_schema_metadata__should_be_correctly_encoded_to_YAML_string),
        ("UID_schema_metadata__should_be_correctly_decoded_from_YAML_string", UID_schema_metadata__should_be_correctly_decoded_from_YAML_string),
        ("UID_schema_metadata__should_be_correctly_encoded_to_YAML_string", UID_schema_metadata__should_be_correctly_encoded_to_YAML_string),
        ("Rating_schema_metadata__should_be_correctly_decoded_from_YAML_string", Rating_schema_metadata__should_be_correctly_decoded_from_YAML_string),
        ("Rating_schema_metadata__should_be_correctly_encoded_to_YAML_string", Rating_schema_metadata__should_be_correctly_encoded_to_YAML_string),
        ("Email_schema_metadata__should_be_correctly_decoded_from_YAML_string", Email_schema_metadata__should_be_correctly_decoded_from_YAML_string),
        ("Email_schema_metadata__should_be_correctly_encoded_to_YAML_string", Email_schema_metadata__should_be_correctly_encoded_to_YAML_string),
        ("Languages_schema_metadata__should_be_correctly_decoded_from_YAML_string", Languages_schema_metadata__should_be_correctly_decoded_from_YAML_string),
        ("Languages_schema_metadata__should_be_correctly_encoded_to_YAML_string", Languages_schema_metadata__should_be_correctly_encoded_to_YAML_string),
        ("Image_size_schema_metadata__should_be_correctly_decoded_from_YAML_string", Image_size_schema_metadata__should_be_correctly_decoded_from_YAML_string),
        ("Image_size_schema_metadata__should_be_correctly_encoded_to_YAML_string", Image_size_schema_metadata__should_be_correctly_encoded_to_YAML_string),
    ]
}

extension SpecSchemaTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecSchemaTests = [
        ("Any_schema__should_be_correctly_decoded_from_YAML_string", Any_schema__should_be_correctly_decoded_from_YAML_string),
        ("Any_schema__should_be_correctly_encoded_to_YAML_string", Any_schema__should_be_correctly_encoded_to_YAML_string),
        ("Boolean_schema__should_be_correctly_decoded_from_YAML_string", Boolean_schema__should_be_correctly_decoded_from_YAML_string),
        ("Boolean_schema__should_be_correctly_encoded_to_YAML_string", Boolean_schema__should_be_correctly_encoded_to_YAML_string),
        ("Integer_schema__should_be_correctly_decoded_from_YAML_string", Integer_schema__should_be_correctly_decoded_from_YAML_string),
        ("Integer_schema__should_be_correctly_encoded_to_YAML_string", Integer_schema__should_be_correctly_encoded_to_YAML_string),
        ("Number_schema__should_be_correctly_decoded_from_YAML_string", Number_schema__should_be_correctly_decoded_from_YAML_string),
        ("Number_schema__should_be_correctly_encoded_to_YAML_string", Number_schema__should_be_correctly_encoded_to_YAML_string),
        ("String_schema__should_be_correctly_decoded_from_YAML_string", String_schema__should_be_correctly_decoded_from_YAML_string),
        ("String_schema__should_be_correctly_encoded_to_YAML_string", String_schema__should_be_correctly_encoded_to_YAML_string),
        ("Array_schema__should_be_correctly_decoded_from_YAML_string", Array_schema__should_be_correctly_decoded_from_YAML_string),
        ("Array_schema__should_be_correctly_encoded_to_YAML_string", Array_schema__should_be_correctly_encoded_to_YAML_string),
        ("Object_schema__should_be_correctly_decoded_from_YAML_string", Object_schema__should_be_correctly_decoded_from_YAML_string),
        ("Object_schema__should_be_correctly_encoded_to_YAML_string", Object_schema__should_be_correctly_encoded_to_YAML_string),
        ("AllOf_schema__should_be_correctly_decoded_from_YAML_string", AllOf_schema__should_be_correctly_decoded_from_YAML_string),
        ("AllOf_schema__should_be_correctly_encoded_to_YAML_string", AllOf_schema__should_be_correctly_encoded_to_YAML_string),
        ("AnyOf_schema__should_be_correctly_decoded_from_YAML_string", AnyOf_schema__should_be_correctly_decoded_from_YAML_string),
        ("AnyOf_schema__should_be_correctly_encoded_to_YAML_string", AnyOf_schema__should_be_correctly_encoded_to_YAML_string),
        ("OneOf_schema__should_be_correctly_decoded_from_YAML_string", OneOf_schema__should_be_correctly_decoded_from_YAML_string),
        ("OneOf_schema__should_be_correctly_encoded_to_YAML_string", OneOf_schema__should_be_correctly_encoded_to_YAML_string),
        ("Availability_schema__should_be_correctly_decoded_from_YAML_string", Availability_schema__should_be_correctly_decoded_from_YAML_string),
        ("Availability_schema__should_be_correctly_encoded_to_YAML_string", Availability_schema__should_be_correctly_encoded_to_YAML_string),
        ("Video_duration_schema__should_be_correctly_decoded_from_YAML_string", Video_duration_schema__should_be_correctly_decoded_from_YAML_string),
        ("Video_duration_schema__should_be_correctly_encoded_to_YAML_string", Video_duration_schema__should_be_correctly_encoded_to_YAML_string),
        ("Content_rating_schema__should_be_correctly_decoded_from_YAML_string", Content_rating_schema__should_be_correctly_decoded_from_YAML_string),
        ("Content_rating_schema__should_be_correctly_encoded_to_YAML_string", Content_rating_schema__should_be_correctly_encoded_to_YAML_string),
        ("UID_schema__should_be_correctly_decoded_from_YAML_string", UID_schema__should_be_correctly_decoded_from_YAML_string),
        ("UID_schema__should_be_correctly_encoded_to_YAML_string", UID_schema__should_be_correctly_encoded_to_YAML_string),
        ("Rating_schema__should_be_correctly_decoded_from_YAML_string", Rating_schema__should_be_correctly_decoded_from_YAML_string),
        ("Rating_schema__should_be_correctly_encoded_to_YAML_string", Rating_schema__should_be_correctly_encoded_to_YAML_string),
        ("Price_category_schema__should_be_correctly_decoded_from_YAML_string", Price_category_schema__should_be_correctly_decoded_from_YAML_string),
        ("Price_category_schema__should_be_correctly_encoded_to_YAML_string", Price_category_schema__should_be_correctly_encoded_to_YAML_string),
        ("Email_schema__should_be_correctly_decoded_from_YAML_string", Email_schema__should_be_correctly_decoded_from_YAML_string),
        ("Email_schema__should_be_correctly_encoded_to_YAML_string", Email_schema__should_be_correctly_encoded_to_YAML_string),
        ("Media_type_schema__should_be_correctly_decoded_from_YAML_string", Media_type_schema__should_be_correctly_decoded_from_YAML_string),
        ("Media_type_schema__should_be_correctly_encoded_to_YAML_string", Media_type_schema__should_be_correctly_encoded_to_YAML_string),
        ("Data_schema__should_be_correctly_decoded_from_YAML_string", Data_schema__should_be_correctly_decoded_from_YAML_string),
        ("Data_schema__should_be_correctly_encoded_to_YAML_string", Data_schema__should_be_correctly_encoded_to_YAML_string),
        ("String_to_string_schema__should_be_correctly_decoded_from_YAML_string", String_to_string_schema__should_be_correctly_decoded_from_YAML_string),
        ("String_to_string_schema__should_be_correctly_encoded_to_YAML_string", String_to_string_schema__should_be_correctly_encoded_to_YAML_string),
        ("Implicit_image_size_schema__should_be_correctly_decoded_from_YAML_string", Implicit_image_size_schema__should_be_correctly_decoded_from_YAML_string),
        ("Implicit_image_size_schema__should_be_correctly_encoded_to_YAML_string", Implicit_image_size_schema__should_be_correctly_encoded_to_YAML_string),
        ("Image_size_schema__should_be_correctly_decoded_from_YAML_string", Image_size_schema__should_be_correctly_decoded_from_YAML_string),
        ("Image_size_schema__should_be_correctly_encoded_to_YAML_string", Image_size_schema__should_be_correctly_encoded_to_YAML_string),
        ("Implicit_languages_schema__should_be_correctly_decoded_from_YAML_string", Implicit_languages_schema__should_be_correctly_decoded_from_YAML_string),
        ("Implicit_languages_schema__should_be_correctly_encoded_to_YAML_string", Implicit_languages_schema__should_be_correctly_encoded_to_YAML_string),
        ("Languages_schema__should_be_correctly_decoded_from_YAML_string", Languages_schema__should_be_correctly_decoded_from_YAML_string),
        ("Languages_schema__should_be_correctly_encoded_to_YAML_string", Languages_schema__should_be_correctly_encoded_to_YAML_string),
        ("Image_file_schema__should_be_correctly_decoded_from_YAML_string", Image_file_schema__should_be_correctly_decoded_from_YAML_string),
        ("Image_file_schema__should_be_correctly_encoded_to_YAML_string", Image_file_schema__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecSchemaXMLTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecSchemaXMLTests = [
        ("Schema_XML_attribute__should_be_correctly_decoded_from_YAML_string", Schema_XML_attribute__should_be_correctly_decoded_from_YAML_string),
        ("Schema_XML_attribute__should_be_correctly_encoded_to_YAML_string", Schema_XML_attribute__should_be_correctly_encoded_to_YAML_string),
        ("Schema_XML_namespace__should_be_correctly_decoded_from_YAML_string", Schema_XML_namespace__should_be_correctly_decoded_from_YAML_string),
        ("Schema_XML_namespace__should_be_correctly_encoded_to_YAML_string", Schema_XML_namespace__should_be_correctly_encoded_to_YAML_string),
        ("Schema_XML_wrapped_array__should_be_correctly_decoded_from_YAML_string", Schema_XML_wrapped_array__should_be_correctly_decoded_from_YAML_string),
        ("Schema_XML_wrapped_array__should_be_correctly_encoded_to_YAML_string", Schema_XML_wrapped_array__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecSecuritySchemeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecSecuritySchemeTests = [
        ("Invalid_type_of_authentication__should_not_be_decoded", Invalid_type_of_authentication__should_not_be_decoded),
        ("API_Key_authentication__should_be_correctly_decoded_from_YAML_string", API_Key_authentication__should_be_correctly_decoded_from_YAML_string),
        ("API_Key_authentication__should_be_correctly_encoded_to_YAML_string", API_Key_authentication__should_be_correctly_encoded_to_YAML_string),
        ("OAuth_2_0_authentication__should_be_correctly_decoded_from_YAML_string", OAuth_2_0_authentication__should_be_correctly_decoded_from_YAML_string),
        ("OAuth_2_0_authentication__should_be_correctly_encoded_to_YAML_string", OAuth_2_0_authentication__should_be_correctly_encoded_to_YAML_string),
        ("Basic_authentication__should_be_correctly_decoded_from_YAML_string", Basic_authentication__should_be_correctly_decoded_from_YAML_string),
        ("Basic_authentication__should_be_correctly_encoded_to_YAML_string", Basic_authentication__should_be_correctly_encoded_to_YAML_string),
        ("Bearer_authentication__should_be_correctly_decoded_from_YAML_string", Bearer_authentication__should_be_correctly_decoded_from_YAML_string),
        ("Bearer_authentication__should_be_correctly_encoded_to_YAML_string", Bearer_authentication__should_be_correctly_encoded_to_YAML_string),
        ("Digest_authentication__should_be_correctly_decoded_from_YAML_string", Digest_authentication__should_be_correctly_decoded_from_YAML_string),
        ("Digest_authentication__should_be_correctly_encoded_to_YAML_string", Digest_authentication__should_be_correctly_encoded_to_YAML_string),
        ("OpenID_Connect_authentication__should_be_correctly_decoded_from_YAML_string", OpenID_Connect_authentication__should_be_correctly_decoded_from_YAML_string),
        ("OpenID_Connect_authentication__should_be_correctly_encoded_to_YAML_string", OpenID_Connect_authentication__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecServerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecServerTests = [
        ("Deprecated_server__should_be_correctly_decoded_from_YAML_string", Deprecated_server__should_be_correctly_decoded_from_YAML_string),
        ("Deprecated_server__should_be_correctly_encoded_to_YAML_string", Deprecated_server__should_be_correctly_encoded_to_YAML_string),
        ("Producation_server__should_be_correctly_decoded_from_YAML_string", Producation_server__should_be_correctly_decoded_from_YAML_string),
        ("Producation_server__should_be_correctly_encoded_to_YAML_string", Producation_server__should_be_correctly_encoded_to_YAML_string),
        ("Staging_server__should_be_correctly_decoded_from_YAML_string", Staging_server__should_be_correctly_decoded_from_YAML_string),
        ("Staging_server__should_be_correctly_encoded_to_YAML_string", Staging_server__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecServerVariableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecServerVariableTests = [
        ("Server_path_variable__should_be_correctly_decoded_from_YAML_string", Server_path_variable__should_be_correctly_decoded_from_YAML_string),
        ("Server_path_variable__should_be_correctly_encoded_to_YAML_string", Server_path_variable__should_be_correctly_encoded_to_YAML_string),
        ("Server_port_variable__should_be_correctly_decoded_from_YAML_string", Server_port_variable__should_be_correctly_decoded_from_YAML_string),
        ("Server_port_variable__should_be_correctly_encoded_to_YAML_string", Server_port_variable__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecStringSchemaTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecStringSchemaTests = [
        ("Any_string_schema__should_be_correctly_decoded_from_YAML_string", Any_string_schema__should_be_correctly_decoded_from_YAML_string),
        ("Any_string_schema__should_be_correctly_encoded_to_YAML_string", Any_string_schema__should_be_correctly_encoded_to_YAML_string),
        ("Email_string_schema__should_be_correctly_decoded_from_YAML_string", Email_string_schema__should_be_correctly_decoded_from_YAML_string),
        ("Email_string_schema__should_be_correctly_encoded_to_YAML_string", Email_string_schema__should_be_correctly_encoded_to_YAML_string),
        ("Media_type_string_schema__should_be_correctly_decoded_from_YAML_string", Media_type_string_schema__should_be_correctly_decoded_from_YAML_string),
        ("Media_type_string_schema__should_be_correctly_encoded_to_YAML_string", Media_type_string_schema__should_be_correctly_encoded_to_YAML_string),
        ("Data_string_schema__should_be_correctly_decoded_from_YAML_string", Data_string_schema__should_be_correctly_decoded_from_YAML_string),
        ("Data_string_schema__should_be_correctly_encoded_to_YAML_string", Data_string_schema__should_be_correctly_encoded_to_YAML_string),
        ("_format__when_string_format_is_known__should_return_the_format", _format__when_string_format_is_known__should_return_the_format),
        ("_format__when_string_format_is_known__should_set__rawFormat__to__rawValue__of_the_new_format", _format__when_string_format_is_known__should_set__rawFormat__to__rawValue__of_the_new_format),
        ("_format__when_string_format_is_not_specified__should_return_nil", _format__when_string_format_is_not_specified__should_return_nil),
        ("_format__when_string_format_is_not_specified__should_set__rawFormat__to__rawValue__of_the_new_format", _format__when_string_format_is_not_specified__should_set__rawFormat__to__rawValue__of_the_new_format),
    ]
}

extension SpecTagTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecTagTests = [
        ("Any_tag__should_be_correctly_decoded_from_YAML_string", Any_tag__should_be_correctly_decoded_from_YAML_string),
        ("Any_tag__should_be_correctly_encoded_to_YAML_string", Any_tag__should_be_correctly_encoded_to_YAML_string),
        ("Private_methods_tag__should_be_correctly_decoded_from_YAML_string", Private_methods_tag__should_be_correctly_decoded_from_YAML_string),
        ("Private_methods_tag__should_be_correctly_encoded_to_YAML_string", Private_methods_tag__should_be_correctly_encoded_to_YAML_string),
        ("_extensions__should_return_extensions", _extensions__should_return_extensions),
        ("_extensions__should_modify_extensions", _extensions__should_modify_extensions),
    ]
}

extension SpecVersionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SpecVersionTests = [
        ("Version_with_major_part_only__should_be_correctly_decoded_from_YAML_string", Version_with_major_part_only__should_be_correctly_decoded_from_YAML_string),
        ("Version_with_major_part_only__should_be_correctly_encoded_to_YAML_string", Version_with_major_part_only__should_be_correctly_encoded_to_YAML_string),
        ("Version_with_invalid_major_part__should_not_be_decoded", Version_with_invalid_major_part__should_not_be_decoded),
        ("Version_with_invalid_minor_part__should_not_be_decoded", Version_with_invalid_minor_part__should_not_be_decoded),
        ("Version_with_invalid_patch__should_not_be_decoded", Version_with_invalid_patch__should_not_be_decoded),
        ("Version_1_20_300__should_be_greater_than_1_0_0", Version_1_20_300__should_be_greater_than_1_0_0),
        ("Version_1_20_300__should_be_greater_than_1_20_3", Version_1_20_300__should_be_greater_than_1_20_3),
        ("Version_1_20_300__should_not_be_greater_than_1_20_300", Version_1_20_300__should_not_be_greater_than_1_20_300),
        ("Version_1_20_300__should_not_be_less_than_1_20_300", Version_1_20_300__should_not_be_less_than_1_20_300),
        ("Version_1_20_300__should_be_less_than_10_20_300", Version_1_20_300__should_be_less_than_10_20_300),
        ("_description__should_return_full_string_representation_of_the_version_number", _description__should_return_full_string_representation_of_the_version_number),
    ]
}

extension StringExtensionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringExtensionsTests = [
        ("_suffix_from____should_return_an_empty_string", _suffix_from____should_return_an_empty_string),
        ("_suffix_from____should_return_an_empty_string_2", _suffix_from____should_return_an_empty_string_2),
        ("_suffix_from____should_return_an_empty_string_3", _suffix_from____should_return_an_empty_string_3),
        ("_suffix_from____should_return_a_string_suffix", _suffix_from____should_return_a_string_suffix),
        ("_suffix_from____should_return_a_string_suffix_2", _suffix_from____should_return_a_string_suffix_2),
        ("_suffix_from____should_return_a_string_suffix_3", _suffix_from____should_return_a_string_suffix_3),
        ("_suffix_from____should_return_a_string_suffix_4", _suffix_from____should_return_a_string_suffix_4),
        ("_suffix_from____should_return_a_string_suffix_5", _suffix_from____should_return_a_string_suffix_5),
    ]
}

extension YAMLDecoderCodingPathExtensionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__YAMLDecoderCodingPathExtensionTests = [
        ("JSON_Decoder__decode__from_userInfo_codingPath___should_correctly_decode_the_data_at_the_given_path_encoding", JSON_Decoder__decode__from_userInfo_codingPath___should_correctly_decode_the_data_at_the_given_path_encoding),
        ("JSON_Decoder__decode__from_userInfo_codingPath___should_correctly_decode_the_data_at_the_given_empty_path_encoding", JSON_Decoder__decode__from_userInfo_codingPath___should_correctly_decode_the_data_at_the_given_empty_path_encoding),
        ("JSON_Decoder__decode__from_userInfo_codingPath___should_ignore_the_value_of_the__codingPath__key_passed_in_the__userInfo__parameter", JSON_Decoder__decode__from_userInfo_codingPath___should_ignore_the_value_of_the__codingPath__key_passed_in_the__userInfo__parameter),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AnyCodableTests.__allTests__AnyCodableTests),
        testCase(AnyCodingKeyTests.__allTests__AnyCodingKeyTests),
        testCase(CollectionExtensionsTests.__allTests__CollectionExtensionsTests),
        testCase(DictionaryExtensionsTests.__allTests__DictionaryExtensionsTests),
        testCase(JSONDecoderCodingPathExtensionTests.__allTests__JSONDecoderCodingPathExtensionTests),
        testCase(RangeReplaceableCollectionExtensionsTests.__allTests__RangeReplaceableCollectionExtensionsTests),
        testCase(SpecAnySchemaTests.__allTests__SpecAnySchemaTests),
        testCase(SpecArraySchemaTests.__allTests__SpecArraySchemaTests),
        testCase(SpecBooleanSchemaTests.__allTests__SpecBooleanSchemaTests),
        testCase(SpecCallbacksTests.__allTests__SpecCallbacksTests),
        testCase(SpecComponentsTests.__allTests__SpecComponentsTests),
        testCase(SpecContactInfoTests.__allTests__SpecContactInfoTests),
        testCase(SpecEmbeddedExampleTests.__allTests__SpecEmbeddedExampleTests),
        testCase(SpecExampleTests.__allTests__SpecExampleTests),
        testCase(SpecExternalDocumentationTests.__allTests__SpecExternalDocumentationTests),
        testCase(SpecHeaderMetadataTests.__allTests__SpecHeaderMetadataTests),
        testCase(SpecHeaderSchemaTests.__allTests__SpecHeaderSchemaTests),
        testCase(SpecHeaderTests.__allTests__SpecHeaderTests),
        testCase(SpecInfoTests.__allTests__SpecInfoTests),
        testCase(SpecIntegerSchemaTests.__allTests__SpecIntegerSchemaTests),
        testCase(SpecLicenseInfoTests.__allTests__SpecLicenseInfoTests),
        testCase(SpecMediaTypeTests.__allTests__SpecMediaTypeTests),
        testCase(SpecNumberSchemaTests.__allTests__SpecNumberSchemaTests),
        testCase(SpecOAuthAuthorizationCodeFlowTests.__allTests__SpecOAuthAuthorizationCodeFlowTests),
        testCase(SpecOAuthFlowTests.__allTests__SpecOAuthFlowTests),
        testCase(SpecOAuthFlowsTests.__allTests__SpecOAuthFlowsTests),
        testCase(SpecOAuthImplicitFlowTests.__allTests__SpecOAuthImplicitFlowTests),
        testCase(SpecObjectSchemaTests.__allTests__SpecObjectSchemaTests),
        testCase(SpecOperationTests.__allTests__SpecOperationTests),
        testCase(SpecParameterMetadataTests.__allTests__SpecParameterMetadataTests),
        testCase(SpecParameterSchemaTests.__allTests__SpecParameterSchemaTests),
        testCase(SpecParameterTests.__allTests__SpecParameterTests),
        testCase(SpecPathTests.__allTests__SpecPathTests),
        testCase(SpecRequestBodyEncodingTests.__allTests__SpecRequestBodyEncodingTests),
        testCase(SpecRequestBodyMediaTypeTests.__allTests__SpecRequestBodyMediaTypeTests),
        testCase(SpecRequestBodyTests.__allTests__SpecRequestBodyTests),
        testCase(SpecResponseTests.__allTests__SpecResponseTests),
        testCase(SpecSchemaDiscriminatorTests.__allTests__SpecSchemaDiscriminatorTests),
        testCase(SpecSchemaMetadataTests.__allTests__SpecSchemaMetadataTests),
        testCase(SpecSchemaTests.__allTests__SpecSchemaTests),
        testCase(SpecSchemaXMLTests.__allTests__SpecSchemaXMLTests),
        testCase(SpecSecuritySchemeTests.__allTests__SpecSecuritySchemeTests),
        testCase(SpecServerTests.__allTests__SpecServerTests),
        testCase(SpecServerVariableTests.__allTests__SpecServerVariableTests),
        testCase(SpecStringSchemaTests.__allTests__SpecStringSchemaTests),
        testCase(SpecTagTests.__allTests__SpecTagTests),
        testCase(SpecVersionTests.__allTests__SpecVersionTests),
        testCase(StringExtensionsTests.__allTests__StringExtensionsTests),
        testCase(YAMLDecoderCodingPathExtensionTests.__allTests__YAMLDecoderCodingPathExtensionTests),
    ]
}
#endif
