import Foundation

/// An enumeration of known HTTP Authorization schemes to be used in the `Authorization` header
/// as defined in [RFC 7235](https://tools.ietf.org/html/rfc7235#section-5.1).
/// Get more info: https://swagger.io/specification/#securitySchemeObject
public enum SwaggerSecurityHTTPScheme: Equatable {

    // MARK: - Enumeration Cases

    /// Simple authentication scheme built into the HTTP protocol.
    ///
    /// The client sends HTTP requests with the `Authorization` header that contains the `Basic` word
    /// followed by a space and a base64-encoded string `username:password`.
    /// For example, to authorize as `demo / p@55w0rd` the client would send:
    /// ```
    /// Authorization: Basic ZGVtbzpwQDU1dzByZA==
    /// ```
    /// **Note**: Basic authentication should only be used together with other security mechanisms such as HTTPS/SSL.
    case basic

    /// HTTP authentication scheme that involves security tokens called bearer tokens.
    /// - `format`: format of the Bearer token.
    ///
    /// The name “Bearer authentication” can be understood as “give access to the bearer of this token”.
    /// The bearer token is a cryptic string, usually generated by the server in response to a login request.
    /// The client must send this token in the `Authorization` header when making requests to protected resources.
    /// For example:
    /// ```
    /// Authorization: Bearer abcdef12345
    /// ```
    /// **Note**: Bearer authentication should only be used together with other security mechanisms such as HTTPS/SSL.
    case bearer(format: String?)

    /// Other undefined scheme.
    /// - `value`: name of the HTTP Authorization scheme.
    case other(String)
}
